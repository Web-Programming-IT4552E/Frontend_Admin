{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../../src/crypt.ts","../../src/deepCopy.ts","../../src/deferred.ts","../../src/emulator.ts","../../src/environment.ts","../../src/errors.ts","../../src/obj.ts","../../src/subscribe.ts","../../src/compat.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/rc-util/es/getScrollBarSize.js","../../../src/firebaseApp.ts","../../../src/errors.ts","../../../src/firebaseNamespace.ts","../../../src/firebaseNamespaceCore.ts","../../../src/logger.ts","../../../src/index.ts","../../../src/registerCoreComponents.ts","../../../src/component.ts","../../../src/constants.ts","../../../src/provider.ts","../../../src/component_container.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/rc-util/es/pickAttrs.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","../../../src/platformLoggerService.ts","../../../src/internal.ts","../../../src/api.ts","../../../src/indexeddb.ts","../../../src/heartbeatService.ts","../../index.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js","../../src/implementation/constants.ts","../../src/implementation/error.ts","../../src/implementation/connection.ts","../../src/implementation/location.ts","../../src/implementation/failrequest.ts","../../src/implementation/type.ts","../../src/implementation/url.ts","../../src/implementation/request.ts","../../src/implementation/backoff.ts","../../src/implementation/fs.ts","../../src/implementation/string.ts","../../src/platform/browser/base64.ts","../../src/implementation/blob.ts","../../src/implementation/json.ts","../../src/implementation/path.ts","../../src/implementation/metadata.ts","../../src/implementation/list.ts","../../src/implementation/requestinfo.ts","../../src/implementation/requests.ts","../../src/implementation/taskenums.ts","../../src/implementation/observer.ts","../../src/implementation/async.ts","../../src/platform/browser/connection.ts","../../src/task.ts","../../src/reference.ts","../../src/service.ts","../../src/constants.ts","../../src/api.ts","../../src/index.ts","../../../src/tasksnapshot.ts","../../../src/task.ts","../../../src/list.ts","../../../src/reference.ts","../../../src/service.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","stringToByteArray","str","out","p","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","deepExtend","source","constructor","Date","getTime","undefined","prop","hasOwnProperty","Deferred","reject","resolve","promise","Promise","callback","error","value","catch","createMockUserToken","token","projectId","uid","project","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","JSON","stringify","alg","type","isBrowser","self","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","FirebaseError","code","customData","name","setPrototypeOf","captureStackTrace","ErrorFactory","create","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","data","PATTERN","_","contains","obj","call","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","bind","observers","unsubscribes","observerCount","task","finalized","then","e","forEachObserver","observer","next","complete","nextOrObserver","methods","method","implementsAnyMethods","noop","unsub","unsubscribeOne","finalError","fn","sendOne","console","err","getModularInstance","_delegate","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","F","s","n","done","_e","f","normalCompletion","didErr","step","_e2","cached","getScrollBarSize","fresh","document","inner","createElement","style","width","height","outer","outerStyle","position","top","left","pointerEvents","visibility","overflow","appendChild","body","widthContained","offsetWidth","widthScroll","clientWidth","removeChild","ensureSize","match","Number","isNaN","getTargetScrollBarSize","Element","_getComputedStyle","getComputedStyle","createFirebaseNamespace","namespace","firebaseAppImpl","apps","__esModule","initializeApp","options","rawConfig","app","appCompat","registerVersion","setLogLevel","onLog","SDK_VERSION","INTERNAL","registerComponent","component","componentName","componentNameWithoutCompat","serviceNamespace","appArg","ERROR_FACTORY","appName","serviceProps","serviceFxn","_getService","args","apply","multipleInstances","removeApp","useAsService","modularAPIs","get","map","createFirebaseNamespaceCore","FirebaseAppImpl","extendNamespace","firebaseNamespace","Component","instanceFactory","instantiationMode","onInstanceCreated","mode","Provider","container","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","set","isInitialized","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","optional","isComponentEager","DEFAULT_ENTRY_NAME","entries","instanceDeferred","delete","services","from","values","all","filter","_delete","opts","isComponentSet","normalizedDeferredIdentifier","existingCallbacks","Set","add","existingInstance","callbacks","invokeOnInitCallbacks","ComponentContainer","providers","provider","getProvider","setComponent","addComponent","_toConsumableArray","arr","arrayLikeToArray","iter","unsupportedIterableToArray","propList","concat","split","ariaPrefix","dataPrefix","prefix","indexOf","pickAttrs","mergedConfig","ariaOnly","arguments","aria","attr","_objectSpread","attrs","forEach","_assertThisInitialized","ReferenceError","_setPrototypeOf","__proto__","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","tx","sort","transformCachableValue","unlisten","removeEventListener","DOMException","addEventListener","cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","some","Proxy","IDBRequest","success","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","index","shift","oldTraps","getProviders","getComponent","isVersionServiceProvider","getImmediate","library","version","logString","PLATFORM_LOG_STRING","_apps","_components","_addComponent","logger","debug","_addOrOverwriteComponent","addOrOverwriteComponent","_registerComponent","_getProvider","heartbeatController","triggerHeartbeat","_removeServiceInstance","clearInstance","_clearComponents","clear","ERRORS","config","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","val","isDeleted","existingApp","newApp","getApp","getApps","deleteApp","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","warn","logCallback","logLevel","setLogLevelImpl","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","computeKey","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","_heartbeatsCache","_storage","_heartbeatsCachePromise","read","platformLogger","agent","getPlatformInfoString","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","valueOf","now","overwrite","extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","toISOString","substring","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","_inherits","subClass","superClass","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","toString","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","Logger","_logLevel","_logHandler","_userLogHandler","level","inst","setUserLogHandler","customLogLevel","userLogHandler","arg","ignored","toLowerCase","_typeof","_possibleConstructorReturn","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","Super","NewTarget","__rest","t","getOwnPropertySymbols","propertyIsEnumerable","CheckableTag","_a","_classNames","customizePrefixCls","prefixCls","className","checked","onChange","onClick","restProps","getPrefixCls","React","ConfigContext","cls","classNames","_defineProperty","_extends","PresetColorRegex","RegExp","PresetColorTypes","PresetStatusColorRegex","PresetStatusColorTypes","InternalTag","ref","children","icon","color","onClose","closeIcon","_a$closable","closable","_React$useContext","direction","_React$useState","_React$useState2","_slicedToArray","visible","setVisible","isPresetColor","test","tagStyle","backgroundColor","presetColor","tagClassName","handleCloseClick","stopPropagation","defaultPrevented","isNeedWave","tagProps","omit","iconNode","kids","tagNode","CloseOutlined","Wave","Tag","displayName","DEFAULT_HOST","prependCode","serverResponse","_baseMessage","StorageError","unknown","cannotSliceBlob","invalidArgument","appDeleted","invalidRootOperation","invalidFormat","format","internalError","ErrorCode","bucket","path","path_","encode","encodeURIComponent","bucketString","host","bucketLocation","Location","makeFromUrl","url","location","bucketDomain","gsRegex","httpModify","loc","decodeURIComponent","firebaseStorageHost","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","invalidUrl","promise_","isString","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","protocol","origin","makeQueryString","params","queryPart","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","timeout_","progressCallback_","connectionFactory_","pendingConnection_","backoffId_","canceled_","appDelete_","resolve_","reject_","start_","backoffDone","requestWentThrough","status","connection","wasSuccessCode","getResponse","getErrorText","canceled","timeout","waitSeconds","retryTimeoutId","globalTimeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","handler","clearGlobalTimeout","clearTimeout","waitMillis","Math","random","stopped","stop","wasTimeout","start","backoffCallback","progressListener","progressEvent","loaded","total","lengthComputable","addUploadProgressListener","send","removeUploadProgressListener","hitServer","getErrorCode","NO_ERROR","getStatus","isRetryStatusCode_","successCode","wasCanceled","ABORT","appDelete","abort","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","bb","append","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataUrl","parts","rest","decoded","percentEncodedBytes_","dataURLBytes_","Uint8Array","hasMinus","hasUnder","hasPlus","hasSlash","array","dataURL","matches","middle","end","endsWith","elideCopy","size","blobType","data_","ArrayBuffer","byteLength","size_","type_","startByte","endByte","sliced","blob","webkitSlice","mozSlice","sliceBlob","FbsBlob","buffer","blobby","uint8Arrays","finalLength","merged","jsonObjectOrNull","parse","lastComponent","lastIndexOf","noXform_","metadata","server","local","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","fromResource","resource","len","mapping","_makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","fromResponseString","listResult","prefixes","items","nextPageToken","pathWithoutTrailingSlash","reference","item","fromBackendResponse","urlParams","headers","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","downloadUrlHandler","tokens","alt","downloadUrlFromResourceString","_protocol","sharedErrorHandler","newErr","objectErrorHandler","shared","getMetadata","fullServerUrl","maxOperationRetryTime","requestInfo","list","delimiter","pageToken","maxResults","isRoot","bucketOnlyServerUrl","listHandler","metadataForUpload_","metadataClone","assign","determineContentType_","multipartUpload","boundary","genBoundary","metadata_","preBlobPart","postBlobPart","maxUploadRetryTime","uploadData","current","checkResumeHeader_","allowed","getResponseHeader","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","uploadStatus","newCurrent","TaskEvent","STATE_CHANGED","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","taskStateFromInternalTaskState","state","argsToForward","sent_","xhr_","XMLHttpRequest","initXhr","errorCode_","sendPromise_","NETWORK_ERROR","setRequestHeader","response","statusText","header","listener","upload","responseType","newTextConnection","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","_codeEquals","completeTransitions_","_transition","_metadataErrorHandler","_promise","_start","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","storage","_getAuthToken","_getAppCheckToken","authToken","appCheckToken","_resolveToken","metadataForUpload","createResumableUpload","_location","createRequest","_makeRequest","getPromise","sizeString","getResumableUploadStatus","statusRequest","_makeProgressCallback","uploadRequest","newStatus","_increaseMultiplier","metadataRequest","multipartRequest","transferred","old","_notifyObservers","cancel","wasPaused","externalState","bytesTransferred","totalBytes","completed","_addObserver","_removeObserver","onFulfilled","onRejected","_notifyObserver","splice","_finishPromise","triggered","fbsAsync","snapshot","valid","_service","Reference","_newRef","newPath","listAllHelper","accumulator","opt","nextPage","op","requestsList","makeRequestWithTokens","updateMetadata","_throwIfRoot","requestsUpdateMetadata","getDownloadURL","requestsGetDownloadUrl","deleteObject","_xhr","_text","requestsDeleteObject","_getChild","childPath","canonicalChildPath","refFromPath","_bucket","serviceOrRef","pathOrUrl","extractBucket","makeFromBucketSpec","connectStorageEmulator","port","mockUserToken","_overrideAuthToken","_authProvider","_appCheckProvider","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","time","POSITIVE_INFINITY","auth","getToken","tokenData","accessToken","appCheck","requestFactory","firebaseVersion","addGmpidHeader_","addAuthHeader_","addVersionHeader_","addAppCheckHeader_","makeRequest","STORAGE_TYPE","uploadBytesResumable","uploadBytesResumableInternal","requestsGetMetadata","getMetadataInternal","listAllInternal","refInternal","connectEmulatorInternal","factory","authProvider","appCheckProvider","setMultipleInstances","pause","resume","wrappedNextOrObserver","taskSnapshot","on","_getChildInternal","ReferenceCompat","root","parent","r","listInternal","updateMetadataInternal","getDownloadURLInternal","deleteObjectInternal","storageExp","namespaceExports","Storage","setServiceProps","Parent","Class","Function","_cache","Wrapper"],"mappings":"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","file":"static/js/17.67adb89c.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/* eslint-disable no-param-reassign */\nvar cached;\nexport default function getScrollBarSize(fresh) {\n  if (typeof document === 'undefined') {\n    return 0;\n  }\n\n  if (fresh || cached === undefined) {\n    var inner = document.createElement('div');\n    inner.style.width = '100%';\n    inner.style.height = '200px';\n    var outer = document.createElement('div');\n    var outerStyle = outer.style;\n    outerStyle.position = 'absolute';\n    outerStyle.top = '0';\n    outerStyle.left = '0';\n    outerStyle.pointerEvents = 'none';\n    outerStyle.visibility = 'hidden';\n    outerStyle.width = '200px';\n    outerStyle.height = '150px';\n    outerStyle.overflow = 'hidden';\n    outer.appendChild(inner);\n    document.body.appendChild(outer);\n    var widthContained = inner.offsetWidth;\n    outer.style.overflow = 'scroll';\n    var widthScroll = inner.offsetWidth;\n\n    if (widthContained === widthScroll) {\n      widthScroll = outer.clientWidth;\n    }\n\n    document.body.removeChild(outer);\n    cached = widthContained - widthScroll;\n  }\n\n  return cached;\n}\n\nfunction ensureSize(str) {\n  var match = str.match(/^(.*)px$/);\n  var value = Number(match === null || match === void 0 ? void 0 : match[1]);\n  return Number.isNaN(value) ? getScrollBarSize() : value;\n}\n\nexport function getTargetScrollBarSize(target) {\n  if (typeof document === 'undefined' || !target || !(target instanceof Element)) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n\n  var _getComputedStyle = getComputedStyle(target, '::-webkit-scrollbar'),\n      width = _getComputedStyle.width,\n      height = _getComputedStyle.height;\n\n  return {\n    width: ensureSize(width),\n    height: ensureSize(height)\n  };\n}","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  STORAGE_OPEN = 'storage-open',\n  STORAGE_GET = 'storage-get',\n  STORAGE_WRITE = 'storage-set',\n  STORAGE_DELETE = 'storage-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.STORAGE_OPEN]:\n    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\n  [AppError.STORAGE_GET]:\n    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\n  [AppError.STORAGE_WRITE]:\n    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\n  [AppError.STORAGE_DELETE]:\n    'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.STORAGE_OPEN]: { originalErrorMessage?: string };\n  [AppError.STORAGE_GET]: { originalErrorMessage?: string };\n  [AppError.STORAGE_WRITE]: { originalErrorMessage?: string };\n  [AppError.STORAGE_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { createSubscribe, deepExtend, ErrorFactory } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { createFirebaseNamespaceCore } from './firebaseNamespaceCore';\n\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nexport function createFirebaseNamespace(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\n  namespace.INTERNAL = {\n    ...namespace.INTERNAL,\n    createFirebaseNamespace,\n    extendNamespace,\n    createSubscribe,\n    ErrorFactory,\n    deepExtend\n  };\n\n  /**\n   * Patch the top-level firebase namespace with additional properties.\n   *\n   * firebase.INTERNAL.extendNamespace()\n   */\n  function extendNamespace(props: { [prop: string]: unknown }): void {\n    deepExtend(namespace, props);\n  }\n\n  return namespace;\n}\n\nexport const firebase = createFirebaseNamespace();\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from './public-types';\nimport {\n  _FirebaseNamespace,\n  _FirebaseService,\n  FirebaseServiceNamespace\n} from './types';\nimport * as modularAPIs from '@firebase/app';\nimport { _FirebaseAppInternal as _FirebaseAppExp } from '@firebase/app';\nimport { Component, ComponentType, Name } from '@firebase/component';\n\nimport { deepExtend, contains } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { FirebaseAppLiteImpl } from './lite/firebaseAppLite';\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): _FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp } = {};\n  // // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // const components = new Map<string, Component<any>>();\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: _FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp: initializeAppCompat,\n    // @ts-ignore\n    app,\n    registerVersion: modularAPIs.registerVersion,\n    setLogLevel: modularAPIs.setLogLevel,\n    onLog: modularAPIs.onLog,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: modularAPIs.SDK_VERSION,\n    INTERNAL: {\n      registerComponent: registerComponentCompat,\n      removeApp,\n      useAsService,\n      modularAPIs\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (namespace as any)['default'] = namespace;\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    delete apps[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || modularAPIs._DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n    }\n    return apps[name];\n  }\n\n  // @ts-ignore\n  app['App'] = firebaseAppImpl;\n\n  /**\n   * Create a new App instance (name must be unique).\n   *\n   * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\n   */\n  function initializeAppCompat(\n    options: FirebaseOptions,\n    rawConfig = {}\n  ): FirebaseApp {\n    const app = modularAPIs.initializeApp(\n      options,\n      rawConfig\n    ) as _FirebaseAppExp;\n\n    if (contains(apps, app.name)) {\n      return apps[app.name];\n    }\n\n    const appCompat = new firebaseAppImpl(app, namespace);\n    apps[app.name] = appCompat;\n    return appCompat;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  function registerComponentCompat<T extends Name>(\n    component: Component<T>\n  ): FirebaseServiceNamespace<_FirebaseService> | null {\n    const componentName = component.name;\n    const componentNameWithoutCompat = componentName.replace('-compat', '');\n    if (\n      modularAPIs._registerComponent(component) &&\n      component.type === ComponentType.PUBLIC\n    ) {\n      // create service namespace for public components\n      // The Service namespace is an accessor function ...\n      const serviceNamespace = (\n        appArg: FirebaseApp = app()\n      ): _FirebaseService => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (typeof (appArg as any)[componentNameWithoutCompat] !== 'function') {\n          // Invalid argument.\n          // This happens in the following case: firebase.storage('gs:/')\n          throw ERROR_FACTORY.create(AppError.INVALID_APP_ARGUMENT, {\n            appName: componentName\n          });\n        }\n\n        // Forward service instance lookup to the FirebaseApp.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return (appArg as any)[componentNameWithoutCompat]();\n      };\n\n      // ... and a container for service-level properties.\n      if (component.serviceProps !== undefined) {\n        deepExtend(serviceNamespace, component.serviceProps);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (namespace as any)[componentNameWithoutCompat] = serviceNamespace;\n\n      // Patch the FirebaseAppImpl prototype\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (firebaseAppImpl.prototype as any)[componentNameWithoutCompat] =\n        // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n        // option added to the no-explicit-any rule when ESlint releases it.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function (...args: any) {\n          const serviceFxn = this._getService.bind(this, componentName);\n          return serviceFxn.apply(\n            this,\n            component.multipleInstances ? args : []\n          );\n        };\n    }\n\n    return component.type === ComponentType.PUBLIC\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (namespace as any)[componentNameWithoutCompat]\n      : null;\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n\n    return useService;\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport firebase from '@firebase/app-compat';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport {\n  StringFormat,\n  _TaskEvent as TaskEvent,\n  _TaskState as TaskState\n} from '@firebase/storage';\n\nimport { ReferenceCompat } from './reference';\nimport { StorageServiceCompat } from './service';\nimport * as types from '@firebase/storage-types';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\nimport { name, version } from '../package.json';\n\n/**\n * Type constant for Firebase Storage.\n */\nconst STORAGE_TYPE = 'storage-compat';\n\nfunction factory(\n  container: ComponentContainer,\n  { instanceIdentifier: url }: InstanceFactoryOptions\n): types.FirebaseStorage {\n  // Dependencies\n  const app = container.getProvider('app-compat').getImmediate();\n  const storageExp = container\n    .getProvider('storage')\n    .getImmediate({ identifier: url });\n\n  const storageServiceCompat: StorageServiceCompat = new StorageServiceCompat(\n    app,\n    storageExp\n  );\n  return storageServiceCompat;\n}\n\nexport function registerStorage(instance: _FirebaseNamespace): void {\n  const namespaceExports = {\n    // no-inline\n    TaskState,\n    TaskEvent,\n    StringFormat,\n    Storage: StorageServiceCompat,\n    Reference: ReferenceCompat\n  };\n  instance.INTERNAL.registerComponent(\n    new Component(STORAGE_TYPE, factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase as unknown as _FirebaseNamespace);\n\n/**\n * Define extension behavior for `registerStorage`\n */\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    storage?: {\n      (app?: FirebaseApp, url?: string): types.FirebaseStorage;\n      Storage: typeof types.FirebaseStorage;\n\n      StringFormat: {\n        BASE64: types.StringFormat;\n        BASE64URL: types.StringFormat;\n        DATA_URL: types.StringFormat;\n        RAW: types.StringFormat;\n      };\n      TaskEvent: {\n        STATE_CHANGED: types.TaskEvent;\n      };\n      TaskState: {\n        CANCELED: types.TaskState;\n        ERROR: types.TaskState;\n        PAUSED: types.TaskState;\n        RUNNING: types.TaskState;\n        SUCCESS: types.TaskState;\n      };\n    };\n  }\n  interface FirebaseApp {\n    storage?(storageBucket?: string): types.FirebaseStorage;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nvar attributes = \"accept acceptCharset accessKey action allowFullScreen allowTransparency\\n    alt async autoComplete autoFocus autoPlay capture cellPadding cellSpacing challenge\\n    charSet checked classID className colSpan cols content contentEditable contextMenu\\n    controls coords crossOrigin data dateTime default defer dir disabled download draggable\\n    encType form formAction formEncType formMethod formNoValidate formTarget frameBorder\\n    headers height hidden high href hrefLang htmlFor httpEquiv icon id inputMode integrity\\n    is keyParams keyType kind label lang list loop low manifest marginHeight marginWidth max maxLength media\\n    mediaGroup method min minLength multiple muted name noValidate nonce open\\n    optimum pattern placeholder poster preload radioGroup readOnly rel required\\n    reversed role rowSpan rows sandbox scope scoped scrolling seamless selected\\n    shape size sizes span spellCheck src srcDoc srcLang srcSet start step style\\n    summary tabIndex target title type useMap value width wmode wrap\";\nvar eventsName = \"onCopy onCut onPaste onCompositionEnd onCompositionStart onCompositionUpdate onKeyDown\\n    onKeyPress onKeyUp onFocus onBlur onChange onInput onSubmit onClick onContextMenu onDoubleClick\\n    onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown\\n    onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp onSelect onTouchCancel\\n    onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough\\n    onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata\\n    onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting onLoad onError\";\nvar propList = \"\".concat(attributes, \" \").concat(eventsName).split(/[\\s\\n]+/);\n/* eslint-enable max-len */\n\nvar ariaPrefix = 'aria-';\nvar dataPrefix = 'data-';\n\nfunction match(key, prefix) {\n  return key.indexOf(prefix) === 0;\n}\n/**\n * Picker props from exist props with filter\n * @param props Passed props\n * @param ariaOnly boolean | { aria?: boolean; data?: boolean; attr?: boolean; } filter config\n */\n\n\nexport default function pickAttrs(props) {\n  var ariaOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var mergedConfig;\n\n  if (ariaOnly === false) {\n    mergedConfig = {\n      aria: true,\n      data: true,\n      attr: true\n    };\n  } else if (ariaOnly === true) {\n    mergedConfig = {\n      aria: true\n    };\n  } else {\n    mergedConfig = _objectSpread({}, ariaOnly);\n  }\n\n  var attrs = {};\n  Object.keys(props).forEach(function (key) {\n    if ( // Aria\n    mergedConfig.aria && (key === 'role' || match(key, ariaPrefix)) || mergedConfig.data && match(key, dataPrefix) || mergedConfig.attr && propList.includes(key)) {\n      attrs[key] = props[key];\n    }\n  });\n  return attrs;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\nexport function initializeApp(\n  options: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.STORAGE_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    throw ERROR_FACTORY.create(AppError.STORAGE_GET, {\n      originalErrorMessage: e.message\n    });\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    throw ERROR_FACTORY.create(AppError.STORAGE_WRITE, {\n      originalErrorMessage: e.message\n    });\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app-compat';\nimport { name, version } from '../../package.json';\n\nfirebase.registerVersion(name, version, 'app-compat');\n\nexport default firebase;\n","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\n\nvar CheckableTag = function CheckableTag(_a) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      checked = _a.checked,\n      onChange = _a.onChange,\n      onClick = _a.onClick,\n      restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var handleClick = function handleClick(e) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable-checked\"), checked), _classNames), className);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  }));\n};\n\nexport default CheckableTag;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport CheckableTag from './CheckableTag';\nimport { ConfigContext } from '../config-provider';\nimport { PresetColorTypes, PresetStatusColorTypes } from '../_util/colors';\nimport Wave from '../_util/wave';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\nvar PresetStatusColorRegex = new RegExp(\"^(\".concat(PresetStatusColorTypes.join('|'), \")$\"));\n\nvar InternalTag = function InternalTag(_a, ref) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      style = _a.style,\n      children = _a.children,\n      icon = _a.icon,\n      color = _a.color,\n      onClose = _a.onClose,\n      closeIcon = _a.closeIcon,\n      _a$closable = _a.closable,\n      closable = _a$closable === void 0 ? false : _a$closable,\n      props = __rest(_a, [\"prefixCls\", \"className\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  React.useEffect(function () {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n\n  var isPresetColor = function isPresetColor() {\n    if (!color) {\n      return false;\n    }\n\n    return PresetColorRegex.test(color) || PresetStatusColorRegex.test(color);\n  };\n\n  var tagStyle = _extends({\n    backgroundColor: color && !isPresetColor() ? color : undefined\n  }, style);\n\n  var presetColor = isPresetColor();\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var tagClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(color), presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-color\"), color && !presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-hidden\"), !visible), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n\n  var handleCloseClick = function handleCloseClick(e) {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (!('visible' in props)) {\n      setVisible(false);\n    }\n  };\n\n  var renderCloseIcon = function renderCloseIcon() {\n    if (closable) {\n      return closeIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }, closeIcon) : /*#__PURE__*/React.createElement(CloseOutlined, {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      });\n    }\n\n    return null;\n  };\n\n  var isNeedWave = 'onClick' in props || children && children.type === 'a';\n  var tagProps = omit(props, ['visible']);\n  var iconNode = icon || null;\n  var kids = iconNode ? /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children)) : children;\n  var tagNode = /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, renderCloseIcon());\n  return isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode;\n};\n\nvar Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nTag.displayName = 'Tag';\nTag.CheckableTag = CheckableTag;\nexport default Tag;","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\n/**\n * An error returned by the Firebase Storage SDK.\n * @public\n */\nexport class StorageError extends FirebaseError {\n  private readonly _baseMessage: string;\n  /**\n   * Stores custom error data unque to StorageError.\n   */\n  customData: { serverResponse: string | null } = { serverResponse: null };\n\n  /**\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\n   *  added to the end of the message.\n   * @param message  - Error message.\n   */\n  constructor(code: StorageErrorCode, message: string) {\n    super(\n      prependCode(code),\n      `Firebase Storage: ${message} (${prependCode(code)})`\n    );\n    this._baseMessage = this.message;\n    // Without this, `instanceof StorageError`, in tests for example,\n    // returns false.\n    Object.setPrototypeOf(this, StorageError.prototype);\n  }\n\n  /**\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\n   */\n  _codeEquals(code: StorageErrorCode): boolean {\n    return prependCode(code) === this.code;\n  }\n\n  /**\n   * Optional response message that was added by the server.\n   */\n  get serverResponse(): null | string {\n    return this.customData.serverResponse;\n  }\n\n  set serverResponse(serverResponse: string | null) {\n    this.customData.serverResponse = serverResponse;\n    if (this.customData.serverResponse) {\n      this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\n    } else {\n      this.message = this._baseMessage;\n    }\n  }\n}\n\nexport const errors = {};\n\n/**\n * @public\n * Error codes that can be attached to `StorageError`s.\n */\nexport const enum StorageErrorCode {\n  // Shared between all platforms\n  UNKNOWN = 'unknown',\n  OBJECT_NOT_FOUND = 'object-not-found',\n  BUCKET_NOT_FOUND = 'bucket-not-found',\n  PROJECT_NOT_FOUND = 'project-not-found',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  UNAUTHENTICATED = 'unauthenticated',\n  UNAUTHORIZED = 'unauthorized',\n  UNAUTHORIZED_APP = 'unauthorized-app',\n  RETRY_LIMIT_EXCEEDED = 'retry-limit-exceeded',\n  INVALID_CHECKSUM = 'invalid-checksum',\n  CANCELED = 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME = 'invalid-event-name',\n  INVALID_URL = 'invalid-url',\n  INVALID_DEFAULT_BUCKET = 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET = 'no-default-bucket',\n  CANNOT_SLICE_BLOB = 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE = 'server-file-wrong-size',\n  NO_DOWNLOAD_URL = 'no-download-url',\n  INVALID_ARGUMENT = 'invalid-argument',\n  INVALID_ARGUMENT_COUNT = 'invalid-argument-count',\n  APP_DELETED = 'app-deleted',\n  INVALID_ROOT_OPERATION = 'invalid-root-operation',\n  INVALID_FORMAT = 'invalid-format',\n  INTERNAL_ERROR = 'internal-error',\n  UNSUPPORTED_ENVIRONMENT = 'unsupported-environment'\n}\n\nexport function prependCode(code: StorageErrorCode): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): StorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new StorageError(StorageErrorCode.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): StorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new StorageError(StorageErrorCode.UNAUTHENTICATED, message);\n}\n\nexport function unauthorizedApp(): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED_APP,\n    'This app does not have permission to access Firebase Storage on this project.'\n  );\n}\n\nexport function unauthorized(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): StorageError {\n  return new StorageError(\n    StorageErrorCode.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): StorageError {\n  return new StorageError(\n    StorageErrorCode.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\n/**\n * @internal\n */\nexport function invalidArgument(message: string): StorageError {\n  return new StorageError(StorageErrorCode.INVALID_ARGUMENT, message);\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): StorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new StorageError(\n    StorageErrorCode.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): StorageError {\n  return new StorageError(\n    StorageErrorCode.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name - The name of the operation that was invalid.\n *\n * @internal\n */\nexport function invalidRootOperation(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format - The format that was not valid.\n * @param message - A message describing the format violation.\n */\nexport function invalidFormat(format: string, message: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function unsupportedEnvironment(message: string): StorageError {\n  throw new StorageError(StorageErrorCode.UNSUPPORTED_ENVIRONMENT, message);\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function internalError(message: string): StorageError {\n  throw new StorageError(\n    StorageErrorCode.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Network headers */\nexport type Headers = Record<string, string>;\n\n/** Response type exposed by the networking APIs. */\nexport type ConnectionType =\n  | string\n  | ArrayBuffer\n  | Blob\n  | NodeJS.ReadableStream;\n\n/**\n * A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n *\n * You can create a new connection by invoking `newTextConnection()`,\n * `newBytesConnection()` or `newStreamConnection()`.\n */\nexport interface Connection<T extends ConnectionType> {\n  /**\n   * Sends a request to the provided URL.\n   *\n   * This method never rejects its promise. In case of encountering an error,\n   * it sets an error code internally which can be accessed by calling\n   * getErrorCode() by callers.\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<void>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponse(): T;\n\n  getErrorText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * Error codes for requests made by the the XhrIo wrapper.\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\n\nimport { invalidDefaultBucket, invalidUrl } from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * Firebase Storage location data.\n *\n * @internal\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string, host: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string, host: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      host === DEFAULT_HOST\n        ? '(?:storage.googleapis.com|storage.cloud.google.com)'\n        : host;\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: StorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { invalidArgument } from './error';\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n\nexport function validateNumber(\n  argument: string,\n  minValue: number,\n  maxValue: number,\n  value: number\n): void {\n  if (value < minValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${minValue} or greater.`\n    );\n  }\n  if (value > maxValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${maxValue} or less.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(\n  urlPart: string,\n  host: string,\n  protocol: string\n): string {\n  let origin = host;\n  if (protocol == null) {\n    origin = `https://${host}`;\n  }\n  return `${protocol}://${origin}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport { id as backoffId, start, stop } from './backoff';\nimport { appDeleted, canceled, retryLimitExceeded, unknown } from './error';\nimport { ErrorHandler, RequestHandler, RequestInfo } from './requestinfo';\nimport { isJustDef } from './type';\nimport { makeQueryString } from './url';\nimport { Connection, ErrorCode, Headers, ConnectionType } from './connection';\n\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete - True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * Handles network logic for all Storage Requests, including error reporting and\n * retries with backoff.\n *\n * @param I - the type of the backend's network response.\n * @param - O the output type used by the rest of the SDK. The conversion\n * happens in the specified `callback_`.\n */\nclass NetworkRequest<I extends ConnectionType, O> implements Request<O> {\n  private pendingConnection_: Connection<I> | null = null;\n  private backoffId_: backoffId | null = null;\n  private resolve_!: (value?: O | PromiseLike<O>) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private promise_: Promise<O>;\n\n  constructor(\n    private url_: string,\n    private method_: string,\n    private headers_: Headers,\n    private body_: string | Blob | Uint8Array | null,\n    private successCodes_: number[],\n    private additionalRetryCodes_: number[],\n    private callback_: RequestHandler<I, O>,\n    private errorCallback_: ErrorHandler | null,\n    private timeout_: number,\n    private progressCallback_: ((p1: number, p2: number) => void) | null,\n    private connectionFactory_: () => Connection<I>\n  ) {\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve as (value?: O | PromiseLike<O>) => void;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const doTheRequest: (\n      backoffCallback: (success: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ) => void = (backoffCallback, canceled) => {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const connection = this.connectionFactory_();\n      this.pendingConnection_ = connection;\n\n      const progressListener: (progressEvent: ProgressEvent) => void =\n        progressEvent => {\n          const loaded = progressEvent.loaded;\n          const total = progressEvent.lengthComputable\n            ? progressEvent.total\n            : -1;\n          if (this.progressCallback_ !== null) {\n            this.progressCallback_(loaded, total);\n          }\n        };\n      if (this.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      }\n\n      // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      connection\n        .send(this.url_, this.method_, this.body_, this.headers_)\n        .then(() => {\n          if (this.progressCallback_ !== null) {\n            connection.removeUploadProgressListener(progressListener);\n          }\n          this.pendingConnection_ = null;\n          const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = connection.getStatus();\n          if (!hitServer || this.isRetryStatusCode_(status)) {\n            const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = this.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, connection));\n        });\n    };\n\n    /**\n     * @param requestWentThrough - True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    const backoffDone: (\n      requestWentThrough: boolean,\n      status: RequestEndStatus<I>\n    ) => void = (requestWentThrough, status) => {\n      const resolve = this.resolve_;\n      const reject = this.reject_;\n      const connection = status.connection as Connection<I>;\n      if (status.wasSuccessCode) {\n        try {\n          const result = this.callback_(connection, connection.getResponse());\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          const err = unknown();\n          err.serverResponse = connection.getErrorText();\n          if (this.errorCallback_) {\n            reject(this.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = this.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    };\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<O> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    const isFiveHundredCode = status >= 500 && status < 600;\n    const extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    const isRequestSpecificRetryCode =\n      this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled - Defaults to false.\n */\nexport class RequestEndStatus<I extends ConnectionType> {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public connection: Connection<I> | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(\n  headers: Headers,\n  firebaseVersion?: string\n): void {\n  headers['X-Firebase-Storage-Version'] =\n    'webjs/' + (firebaseVersion ?? 'AppManager');\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nexport function addAppCheckHeader_(\n  headers: Headers,\n  appCheckToken: string | null\n): void {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nexport function makeRequest<I extends ConnectionType, O>(\n  requestInfo: RequestInfo<I, O>,\n  appId: string | null,\n  authToken: string | null,\n  appCheckToken: string | null,\n  requestFactory: () => Connection<I>,\n  firebaseVersion?: string\n): Request<O> {\n  const queryPart = makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest<I, O>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    requestFactory\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (p1: (success: boolean) => void, canceled: boolean) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let retryTimeoutId: any = null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let globalTimeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    retryTimeoutId = setTimeout(() => {\n      retryTimeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function clearGlobalTimeout(): void {\n    if (globalTimeoutId) {\n      clearTimeout(globalTimeoutId);\n    }\n  }\n\n  function handler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      clearGlobalTimeout();\n      return;\n    }\n    if (success) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    clearGlobalTimeout();\n    if (triggeredCallback) {\n      return;\n    }\n    if (retryTimeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(retryTimeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  globalTimeoutId = setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport { isNativeBlobDefined } from './type';\nimport { StorageErrorCode, StorageError } from './error';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new StorageError(\n        StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n        \"This browser doesn't seem to support creating Blobs\"\n      );\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { unknown, invalidFormat } from './error';\nimport { decodeBase64 } from '../platform/base64';\n\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport type StringFormat = typeof StringFormat[keyof typeof StringFormat];\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport const StringFormat = {\n  /**\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\n   * sequence.\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\n   */\n  RAW: 'raw',\n  /**\n   * Indicates the string should be interpreted as base64-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64: 'base64',\n  /**\n   * Indicates the string should be interpreted as base64url-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64URL: 'base64url',\n  /**\n   * Indicates the string is a data URL, such as one obtained from\n   * canvas.toDataURL().\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\n   * becomes the byte sequence\n   * 69 a6 9a\n   * (the content-type \"application/octet-stream\" is also applied, but can\n   * be overridden in the metadata object).\n   */\n  DATA_URL: 'data_url'\n} as const;\n\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\n/**\n * @internal\n */\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Converts a Base64 encoded string to a binary string. */\nexport function decodeBase64(encoded: string): string {\n  return atob(encoded);\n}\n\nexport function decodeUint8Array(data: Uint8Array): string {\n  return new TextDecoder().decode(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport { sliceBlob, getBlob } from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport { isNativeBlob, isNativeBlobDefined, isString } from './type';\n\n/**\n * @param opt_elideCopy - If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n *\n * @internal\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isNonArrayObject } from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { jsonObjectOrNull } from './json';\nimport { Location } from './location';\nimport { lastComponent } from './path';\nimport { isString } from './type';\nimport { makeUrl, makeQueryString } from './url';\nimport { Reference } from '../reference';\nimport { FirebaseStorageImpl } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size?: number | string\n  ): number | undefined {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: FirebaseStorageImpl): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: FirebaseStorageImpl,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: FirebaseStorageImpl,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string,\n  host: string,\n  protocol: string\n): string | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = makeUrl(urlPart, host, protocol);\n    const queryString = makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the listOptions and listResult format\n */\nimport { Location } from './location';\nimport { jsonObjectOrNull } from './json';\nimport { ListResult } from '../list';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Represents the simplified object metadata returned by List API.\n * Other fields are filtered because list in Firebase Rules does not grant\n * the permission to read the metadata.\n */\ninterface ListMetadataResponse {\n  name: string;\n  bucket: string;\n}\n\n/**\n * Represents the JSON response of List API.\n */\ninterface ListResultResponse {\n  prefixes: string[];\n  items: ListMetadataResponse[];\n  nextPageToken?: string;\n}\n\nconst PREFIXES_KEY = 'prefixes';\nconst ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(\n  service: FirebaseStorageImpl,\n  bucket: string,\n  resource: ListResultResponse\n): ListResult {\n  const listResult: ListResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (const path of resource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      const reference = service._makeStorageReference(\n        new Location(bucket, pathWithoutTrailingSlash)\n      );\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (const item of resource[ITEMS_KEY]) {\n      const reference = service._makeStorageReference(\n        new Location(bucket, item['name'])\n      );\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\n\nexport function fromResponseString(\n  service: FirebaseStorageImpl,\n  bucket: string,\n  resourceString: string\n): ListResult | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as unknown as ListResultResponse;\n  return fromBackendResponse(service, bucket, resource);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Headers, Connection, ConnectionType } from './connection';\n\n/**\n * Type for url params stored in RequestInfo.\n */\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\n/**\n * A function that converts a server response to the API type expected by the\n * SDK.\n *\n * @param I - the type of the backend's network response\n * @param O - the output response type used by the rest of the SDK.\n */\nexport type RequestHandler<I extends ConnectionType, O> = (\n  connection: Connection<I>,\n  response: I\n) => O;\n\n/** A function to handle an error. */\nexport type ErrorHandler = (\n  connection: Connection<ConnectionType>,\n  response: StorageError\n) => StorageError;\n\n/**\n * Contains a fully specified request.\n *\n * @param I - the type of the backend's network response.\n * @param O - the output response type used by the rest of the SDK.\n */\nexport class RequestInfo<I extends ConnectionType, O> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n  errorHandler: ErrorHandler | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: RequestHandler<I, O>,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  StorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown,\n  unauthorizedApp\n} from './error';\nimport { Location } from './location';\nimport {\n  Mappings,\n  fromResourceString,\n  downloadUrlFromResourceString,\n  toResourceString\n} from './metadata';\nimport { fromResponseString } from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport { isString } from './type';\nimport { makeUrl } from './url';\nimport { Connection, ConnectionType } from './connection';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Throws the UNKNOWN StorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => Metadata {\n  function handler(xhr: Connection<string>, text: string): Metadata {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: FirebaseStorageImpl,\n  bucket: string\n): (p1: Connection<string>, p2: string) => ListResult {\n  function handler(xhr: Connection<string>, text: string): ListResult {\n    const listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => string | null {\n  function handler(xhr: Connection<string>, text: string): string | null {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(\n      metadata as Metadata,\n      text,\n      service.host,\n      service._protocol\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      if (\n        // This exact message string is the only consistent part of the\n        // server's error response that identifies it as an App Check error.\n        xhr.getErrorText().includes('Firebase App Check token is invalid')\n      ) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: FirebaseStorageImpl,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<string, ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getBytes<I extends ConnectionType>(\n  service: FirebaseStorageImpl,\n  location: Location,\n  maxDownloadSizeBytes?: number\n): RequestInfo<I, I> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    (_: Connection<I>, data: I) => data,\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  if (maxDownloadSizeBytes !== undefined) {\n    requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\n    requestInfo.successCodes = [200 /* OK */, 206 /* Partial Content */];\n  }\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'PATCH';\n  const body = toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: FirebaseStorageImpl,\n  location: Location\n): RequestInfo<string, void> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: Connection<string>, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\n/**\n * Prepare RequestInfo for uploads as Content-Type: multipart.\n */\nexport function multipartUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(\n  xhr: Connection<string>,\n  allowed?: string[]\n): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: Connection<string>): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: FirebaseStorageImpl,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<string, ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: Connection<string>): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const RESUMABLE_UPLOAD_CHUNK_SIZE: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: FirebaseStorageImpl,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<string, ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  const uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': `${status_.current}`\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(\n    xhr: Connection<string>,\n    text: string\n  ): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport type TaskEvent = string;\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport const TaskEvent = {\n  /**\n   * For this event,\n   * <ul>\n   *   <li>The `next` function is triggered on progress updates and when the\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\n   *       argument.</li>\n   *   <li>The `error` function is triggered if the upload is canceled or fails\n   *       for another reason.</li>\n   *   <li>The `complete` function is triggered if the upload completes\n   *       successfully.</li>\n   * </ul>\n   */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n */\nexport const enum InternalTaskState {\n  RUNNING = 'running',\n  PAUSING = 'pausing',\n  PAUSED = 'paused',\n  SUCCESS = 'success',\n  CANCELING = 'canceling',\n  CANCELED = 'canceled',\n  ERROR = 'error'\n}\n\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport type TaskState = typeof TaskState[keyof typeof TaskState];\n\n// type keys = keyof TaskState\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n} as const;\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isFunction } from './type';\nimport { StorageError } from './error';\n\n/**\n * Function that is called once for each value in a stream of values.\n */\nexport type NextFn<T> = (value: T) => void;\n\n/**\n * A function that is called with a `StorageError`\n * if the event stream ends due to an error.\n */\nexport type ErrorFn = (error: StorageError) => void;\n\n/**\n * A function that is called if the event stream ends normally.\n */\nexport type CompleteFn = () => void;\n\n/**\n * Unsubscribes from a stream.\n */\nexport type Unsubscribe = () => void;\n\n/**\n * An observer identical to the `Observer` defined in packages/util except the\n * error passed into the ErrorFn is specifically a `StorageError`.\n */\nexport interface StorageObserver<T> {\n  /**\n   * Function that is called once for each value in the event stream.\n   */\n  next?: NextFn<T>;\n  /**\n   * A function that is called with a `StorageError`\n   * if the event stream ends due to an error.\n   */\n  error?: ErrorFn;\n  /**\n   * A function that is called if the event stream ends normally.\n   */\n  complete?: CompleteFn;\n}\n\n/**\n * Subscribes to an event stream.\n */\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ) {\n    const asFunctions =\n      isFunction(nextOrObserver) || error != null || complete != null;\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T>;\n      this.error = error ?? undefined;\n      this.complete = complete ?? undefined;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T>;\n        error?: ErrorFn;\n        complete?: CompleteFn;\n      };\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Connection,\n  ConnectionType,\n  ErrorCode,\n  Headers\n} from '../../implementation/connection';\nimport { internalError } from '../../implementation/error';\n\n/** An override for the text-based Connection. Used in tests. */\nlet textFactoryOverride: (() => Connection<string>) | null = null;\n\n/**\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\n */\nabstract class XhrConnection<T extends ConnectionType>\n  implements Connection<T>\n{\n  protected xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<void>;\n  protected sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.initXhr();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve();\n      });\n    });\n  }\n\n  abstract initXhr(): void;\n\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string,\n    headers?: Headers\n  ): Promise<void> {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (headers !== undefined) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  }\n\n  getStatus(): number {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  getResponse(): T {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponse() before sending');\n    }\n    return this.xhr_.response;\n  }\n\n  getErrorText(): string {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorText() before sending');\n    }\n    return this.xhr_.statusText;\n  }\n\n  /** Aborts the request. */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n\nexport class XhrTextConnection extends XhrConnection<string> {\n  initXhr(): void {\n    this.xhr_.responseType = 'text';\n  }\n}\n\nexport function newTextConnection(): Connection<string> {\n  return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\n}\n\nexport class XhrBytesConnection extends XhrConnection<ArrayBuffer> {\n  private data_?: ArrayBuffer;\n\n  initXhr(): void {\n    this.xhr_.responseType = 'arraybuffer';\n  }\n}\n\nexport function newBytesConnection(): Connection<ArrayBuffer> {\n  return new XhrBytesConnection();\n}\n\nexport class XhrBlobConnection extends XhrConnection<Blob> {\n  initXhr(): void {\n    this.xhr_.responseType = 'blob';\n  }\n}\n\nexport function newBlobConnection(): Connection<Blob> {\n  return new XhrBlobConnection();\n}\n\nexport function newStreamConnection(): Connection<NodeJS.ReadableStream> {\n  throw new Error('Streams are only supported on Node');\n}\n\nexport function injectTestConnection(\n  factory: (() => Connection<string>) | null\n): void {\n  textFactoryOverride = factory;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport {\n  canceled,\n  StorageErrorCode,\n  StorageError\n} from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  Observer,\n  Subscribe,\n  Unsubscribe,\n  StorageObserver as StorageObserverInternal,\n  NextFn\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot, StorageObserver } from './public-types';\nimport { async as fbsAsync } from './implementation/async';\nimport { Mappings, getMappings } from './implementation/metadata';\nimport {\n  createResumableUpload,\n  getResumableUploadStatus,\n  RESUMABLE_UPLOAD_CHUNK_SIZE,\n  ResumableUploadStatus,\n  continueResumableUpload,\n  getMetadata,\n  multipartUpload\n} from './implementation/requests';\nimport { Reference } from './reference';\nimport { newTextConnection } from './platform/connection';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n * @internal\n */\nexport class UploadTask {\n  private _ref: Reference;\n  /**\n   * The data to be uploaded.\n   */\n  _blob: FbsBlob;\n  /**\n   * Metadata related to the upload.\n   */\n  _metadata: Metadata | null;\n  private _mappings: Mappings;\n  /**\n   * Number of bytes transferred so far.\n   */\n  _transferred: number = 0;\n  private _needToFetchStatus: boolean = false;\n  private _needToFetchMetadata: boolean = false;\n  private _observers: Array<StorageObserverInternal<UploadTaskSnapshot>> = [];\n  private _resumable: boolean;\n  /**\n   * Upload state.\n   */\n  _state: InternalTaskState;\n  private _error?: StorageError = undefined;\n  private _uploadUrl?: string = undefined;\n  private _request?: Request<unknown> = undefined;\n  private _chunkMultiplier: number = 1;\n  private _errorHandler: (p1: StorageError) => void;\n  private _metadataErrorHandler: (p1: StorageError) => void;\n  private _resolve?: (p1: UploadTaskSnapshot) => void = undefined;\n  private _reject?: (p1: StorageError) => void = undefined;\n  private _promise: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref - The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob - The blob to upload.\n   */\n  constructor(ref: Reference, blob: FbsBlob, metadata: Metadata | null = null) {\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n    this._errorHandler = error => {\n      this._request = undefined;\n      this._chunkMultiplier = 1;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this._needToFetchStatus = true;\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._metadataErrorHandler = error => {\n      this._request = undefined;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n      this._start();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this._promise.then(null, () => {});\n  }\n\n  private _makeProgressCallback(): (p1: number, p2: number) => void {\n    const sizeBefore = this._transferred;\n    return loaded => this._updateProgress(sizeBefore + loaded);\n  }\n\n  private _shouldDoResumable(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private _start(): void {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this._request !== undefined) {\n      return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  }\n\n  private _resolveToken(\n    callback: (authToken: string | null, appCheckToken: string | null) => void\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.all([\n      this._ref.storage._getAuthToken(),\n      this._ref.storage._getAppCheckToken()\n    ]).then(([authToken, appCheckToken]) => {\n      switch (this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken, appCheckToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this._transition(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this._transition(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private _createResumable(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = createResumableUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const createRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this._request = undefined;\n        this._uploadUrl = url;\n        this._needToFetchStatus = false;\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _fetchStatus(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getResumableUploadStatus(\n        this._ref.storage,\n        this._ref._location,\n        url,\n        this._blob\n      );\n      const statusRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as ResumableUploadStatus;\n        this._request = undefined;\n        this._updateProgress(status.current);\n        this._needToFetchStatus = false;\n        if (status.finalized) {\n          this._needToFetchMetadata = true;\n        }\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _continueUpload(): void {\n    const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    const status = new ResumableUploadStatus(\n      this._transferred,\n      this._blob.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      let requestInfo;\n      try {\n        requestInfo = continueResumableUpload(\n          this._ref._location,\n          this._ref.storage,\n          url,\n          this._blob,\n          chunkSize,\n          this._mappings,\n          status,\n          this._makeProgressCallback()\n        );\n      } catch (e) {\n        this._error = e;\n        this._transition(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = uploadRequest;\n      uploadRequest.getPromise().then((newStatus: ResumableUploadStatus) => {\n        this._increaseMultiplier();\n        this._request = undefined;\n        this._updateProgress(newStatus.current);\n        if (newStatus.finalized) {\n          this._metadata = newStatus.metadata;\n          this._transition(InternalTaskState.SUCCESS);\n        } else {\n          this.completeTransitions_();\n        }\n      }, this._errorHandler);\n    });\n  }\n\n  private _increaseMultiplier(): void {\n    const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  }\n\n  private _fetchMetadata(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getMetadata(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings\n      );\n      const metadataRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._metadataErrorHandler);\n    });\n  }\n\n  private _oneShotUpload(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = multipartUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const multipartRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._updateProgress(this._blob.size());\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._errorHandler);\n    });\n  }\n\n  private _updateProgress(transferred: number): void {\n    const old = this._transferred;\n    this._transferred = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  }\n\n  private _transition(state: InternalTaskState): void {\n    if (this._state === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n        if (wasPaused) {\n          this._notifyObservers();\n          this._start();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this._start();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  /**\n   * A snapshot of the current task state.\n   */\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    return {\n      bytesTransferred: this._transferred,\n      totalBytes: this._blob.size(),\n      state: externalState,\n      metadata: this._metadata!,\n      task: this,\n      ref: this._ref\n    };\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type - The type of event to listen for.\n   * @param nextOrObserver -\n   *     The `next` function, which gets called for each item in\n   *     the event stream, or an observer object with some or all of these three\n   *     properties (`next`, `error`, `complete`).\n   * @param error - A function that gets called with a `StorageError`\n   *     if the event stream ends due to an error.\n   * @param completed - A function that gets called if the\n   *     event stream ends normally.\n   * @returns\n   *     If only the event argument is passed, returns a function you can use to\n   *     add callbacks (see the examples above). If more than just the event\n   *     argument is passed, returns a function you can call to unregister the\n   *     callbacks.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | StorageObserver<UploadTaskSnapshot>\n      | null\n      | ((snapshot: UploadTaskSnapshot) => unknown),\n    error?: ((a: StorageError) => unknown) | null,\n    completed?: Unsubscribe | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    const observer = new Observer(\n      (nextOrObserver as\n        | StorageObserverInternal<UploadTaskSnapshot>\n        | NextFn<UploadTaskSnapshot>) || undefined,\n      error || undefined,\n      completed || undefined\n    );\n    this._addObserver(observer);\n    return () => {\n      this._removeObserver(observer);\n    };\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected - The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: StorageError) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: StorageError) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private _addObserver(observer: Observer<UploadTaskSnapshot>): void {\n    this._observers.push(observer);\n    this._notifyObserver(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private _removeObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this._observers.indexOf(observer);\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  }\n\n  private _notifyObservers(): void {\n    this._finishPromise();\n    const observers = this._observers.slice();\n    observers.forEach(observer => {\n      this._notifyObserver(observer);\n    });\n  }\n\n  private _finishPromise(): void {\n    if (this._resolve !== undefined) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this._resolve.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this._reject as (p1: StorageError) => void;\n          fbsAsync(toCall.bind(null, this._error as StorageError))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  }\n\n  private _notifyObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    const valid =\n      this._state === InternalTaskState.PAUSED ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    const valid = this._state === InternalTaskState.RUNNING;\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    const valid =\n      this._state === InternalTaskState.RUNNING ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase StorageReference class.\n */\n\nimport { PassThrough, Transform, TransformOptions } from 'stream';\n\nimport { FbsBlob } from './implementation/blob';\nimport { Location } from './implementation/location';\nimport { getMappings } from './implementation/metadata';\nimport { child, lastComponent, parent } from './implementation/path';\nimport {\n  deleteObject as requestsDeleteObject,\n  getBytes,\n  getDownloadUrl as requestsGetDownloadUrl,\n  getMetadata as requestsGetMetadata,\n  list as requestsList,\n  multipartUpload,\n  updateMetadata as requestsUpdateMetadata\n} from './implementation/requests';\nimport { ListOptions, UploadResult } from './public-types';\nimport { dataFromString, StringFormat } from './implementation/string';\nimport { Metadata } from './metadata';\nimport { FirebaseStorageImpl } from './service';\nimport { ListResult } from './list';\nimport { UploadTask } from './task';\nimport { invalidRootOperation, noDownloadURL } from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport {\n  newBlobConnection,\n  newBytesConnection,\n  newStreamConnection,\n  newTextConnection\n} from './platform/connection';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @internal\n * @param _location - An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  _location: Location;\n\n  constructor(\n    private _service: FirebaseStorageImpl,\n    location: string | Location\n  ) {\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n\n  /**\n   * Returns the URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  }\n\n  protected _newRef(\n    service: FirebaseStorageImpl,\n    location: Location\n  ): Reference {\n    return new Reference(service, location);\n  }\n\n  /**\n   * A reference to the root of this object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this._location.bucket, '');\n    return this._newRef(this._service, location);\n  }\n\n  /**\n   * The name of the bucket containing this reference's object.\n   */\n  get bucket(): string {\n    return this._location.bucket;\n  }\n\n  /**\n   * The full path of this object.\n   */\n  get fullPath(): string {\n    return this._location.path;\n  }\n\n  /**\n   * The short name of this object, which is the last component of the full path.\n   * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\n   */\n  get name(): string {\n    return lastComponent(this._location.path);\n  }\n\n  /**\n   * The `StorageService` instance this `StorageReference` is associated with.\n   */\n  get storage(): FirebaseStorageImpl {\n    return this._service;\n  }\n\n  /**\n   * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\n   * this reference is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = parent(this._location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this._location.bucket, newPath);\n    return new Reference(this._service, location);\n  }\n\n  /**\n   * Utility function to throw an error in methods that do not accept a root reference.\n   */\n  _throwIfRoot(name: string): void {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded bytes.\n */\nexport function getBytesInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref._throwIfRoot('getBytes');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBytesConnection)\n    .then(bytes =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (bytes as ArrayBuffer).slice(0, maxDownloadSizeBytes)\n        : (bytes as ArrayBuffer)\n    );\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded blob.\n */\nexport function getBlobInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<Blob> {\n  ref._throwIfRoot('getBlob');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBlobConnection)\n    .then(blob =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (blob as Blob).slice(0, maxDownloadSizeBytes)\n        : (blob as Blob)\n    );\n}\n\n/** Stream the bytes at the object's location. */\nexport function getStreamInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): NodeJS.ReadableStream {\n  ref._throwIfRoot('getStream');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n\n  /** A transformer that passes through the first n bytes. */\n  const newMaxSizeTransform: (n: number) => TransformOptions = n => {\n    let missingBytes = n;\n    return {\n      transform(chunk, encoding, callback) {\n        // GCS may not honor the Range header for small files\n        if (chunk.length < missingBytes) {\n          this.push(chunk);\n          missingBytes -= chunk.length;\n        } else {\n          this.push(chunk.slice(0, missingBytes));\n          this.emit('end');\n        }\n        callback();\n      }\n    } as TransformOptions;\n  };\n\n  const result =\n    maxDownloadSizeBytes !== undefined\n      ? new Transform(newMaxSizeTransform(maxDownloadSizeBytes))\n      : new PassThrough();\n\n  ref.storage\n    .makeRequestWithTokens(requestInfo, newStreamConnection)\n    .then(stream => (stream as NodeJS.ReadableStream).pipe(result))\n    .catch(e => result.destroy(e));\n  return result;\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n *\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadBytes');\n  const requestInfo = multipartUpload(\n    ref.storage,\n    ref._location,\n    getMappings(),\n    new FbsBlob(data, true),\n    metadata\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(finalMetadata => {\n      return {\n        metadata: finalMetadata,\n        ref\n      };\n    });\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): UploadTask {\n  ref._throwIfRoot('uploadBytesResumable');\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - StorageReference where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the newly uploaded string.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: Reference,\n  value: string,\n  format: StringFormat = StringFormat.RAW,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadString');\n  const data = dataFromString(format, value);\n  const metadataClone = { ...metadata } as Metadata;\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType!;\n  }\n  return uploadBytes(ref, data.data, metadataClone);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: listAll may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - StorageReference to get list from.\n *\n * @returns A Promise that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: Reference): Promise<ListResult> {\n  const accumulator: ListResult = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() => accumulator);\n}\n\n/**\n * Separated from listAll because async functions can't use \"arguments\".\n * @param ref\n * @param accumulator\n * @param pageToken\n */\nasync function listAllHelper(\n  ref: Reference,\n  accumulator: ListResult,\n  pageToken?: string\n): Promise<void> {\n  const opt: ListOptions = {\n    // maxResults is 1000 by default.\n    pageToken\n  };\n  const nextPage = await list(ref, opt);\n  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.push(...nextPage.items);\n  if (nextPage.nextPageToken != null) {\n    await listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - StorageReference to get list from.\n * @param options - See ListOptions for details.\n * @returns A Promise that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: Reference,\n  options?: ListOptions | null\n): Promise<ListResult> {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber(\n        'options.maxResults',\n        /* minValue= */ 1,\n        /* maxValue= */ 1000,\n        options.maxResults\n      );\n    }\n  }\n  const op = options || {};\n  const requestInfo = requestsList(\n    ref.storage,\n    ref._location,\n    /*delimiter= */ '/',\n    op.pageToken,\n    op.maxResults\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - StorageReference to get metadata from.\n */\nexport function getMetadata(ref: Reference): Promise<Metadata> {\n  ref._throwIfRoot('getMetadata');\n  const requestInfo = requestsGetMetadata(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - StorageReference to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves\n *     with the new metadata for this object.\n *     See `firebaseStorage.Reference.prototype.getMetadata`\n */\nexport function updateMetadata(\n  ref: Reference,\n  metadata: Partial<Metadata>\n): Promise<Metadata> {\n  ref._throwIfRoot('updateMetadata');\n  const requestInfo = requestsUpdateMetadata(\n    ref.storage,\n    ref._location,\n    metadata,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns the download URL for the given Reference.\n * @public\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: Reference): Promise<string> {\n  ref._throwIfRoot('getDownloadURL');\n  const requestInfo = requestsGetDownloadUrl(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(url => {\n      if (url === null) {\n        throw noDownloadURL();\n      }\n      return url;\n    });\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - StorageReference for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: Reference): Promise<void> {\n  ref._throwIfRoot('deleteObject');\n  const requestInfo = requestsDeleteObject(ref.storage, ref._location);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns reference for object obtained by appending `childPath` to `ref`.\n *\n * @param ref - StorageReference to get child of.\n * @param childPath - Child path from provided ref.\n * @returns A reference to the object obtained by\n * appending childPath, removing any duplicate, beginning, or trailing\n * slashes.\n *\n */\nexport function _getChild(ref: Reference, childPath: string): Reference {\n  const newPath = child(ref._location.path, childPath);\n  const location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { Reference, _getChild } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport {\n  CONFIG_STORAGE_BUCKET_KEY,\n  DEFAULT_HOST,\n  DEFAULT_MAX_OPERATION_RETRY_TIME,\n  DEFAULT_MAX_UPLOAD_RETRY_TIME\n} from './implementation/constants';\nimport {\n  invalidArgument,\n  appDeleted,\n  noDefaultBucket\n} from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport { FirebaseStorage } from './public-types';\nimport { createMockUserToken, EmulatorMockTokenOptions } from '@firebase/util';\nimport { Connection, ConnectionType } from './implementation/connection';\n\nexport function isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given url.\n */\nfunction refFromURL(service: FirebaseStorageImpl, url: string): Reference {\n  return new Reference(service, url);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given path in the default\n * bucket.\n */\nfunction refFromPath(\n  ref: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference {\n  if (ref instanceof FirebaseStorageImpl) {\n    const service = ref;\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n    const reference = new Reference(service, service._bucket!);\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\n/**\n * Returns a storage Reference for the given url.\n * @param storage - `Storage` instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorageImpl, url?: string): Reference;\n/**\n * Returns a storage Reference for the given path in the\n * default bucket.\n * @param storageOrRef - `Storage` service or storage `Reference`.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if Storage\n * instance provided) or returns same reference (if Reference provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference;\nexport function ref(\n  serviceOrRef: FirebaseStorageImpl | Reference,\n  pathOrUrl?: string\n): Reference | null {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument(\n        'To use ref(service, url), the first argument must be a Storage instance.'\n      );\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(\n  host: string,\n  config?: FirebaseOptions\n): Location | null {\n  const bucketString = config?.[CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString == null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nexport function connectStorageEmulator(\n  storage: FirebaseStorageImpl,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  storage.host = `${host}:${port}`;\n  storage._protocol = 'http';\n  const { mockUserToken } = options;\n  if (mockUserToken) {\n    storage._overrideAuthToken =\n      typeof mockUserToken === 'string'\n        ? mockUserToken\n        : createMockUserToken(mockUserToken, storage.app.options.projectId);\n  }\n}\n\n/**\n * A service that provides Firebase Storage Reference instances.\n * @param opt_url - gs:// url to a custom Storage Bucket\n *\n * @internal\n */\nexport class FirebaseStorageImpl implements FirebaseStorage {\n  _bucket: Location | null = null;\n  /**\n   * This string can be in the formats:\n   * - host\n   * - host:port\n   */\n  private _host: string = DEFAULT_HOST;\n  _protocol: string = 'https';\n  protected readonly _appId: string | null = null;\n  private readonly _requests: Set<Request<unknown>>;\n  private _deleted: boolean = false;\n  private _maxOperationRetryTime: number;\n  private _maxUploadRetryTime: number;\n  _overrideAuthToken?: string;\n\n  constructor(\n    /**\n     * FirebaseApp associated with this StorageService instance.\n     */\n    readonly app: FirebaseApp,\n    readonly _authProvider: Provider<FirebaseAuthInternalName>,\n    /**\n     * @internal\n     */\n    readonly _appCheckProvider: Provider<AppCheckInternalComponentName>,\n    /**\n     * @internal\n     */\n    readonly _url?: string,\n    readonly _firebaseVersion?: string\n  ) {\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n\n  /**\n   * The host string for this service, in the form of `host` or\n   * `host:port`.\n   */\n  get host(): string {\n    return this._host;\n  }\n\n  set host(host: string) {\n    this._host = host;\n    if (this._url != null) {\n      this._bucket = Location.makeFromBucketSpec(this._url, host);\n    } else {\n      this._bucket = extractBucket(host, this.app.options);\n    }\n  }\n\n  /**\n   * The maximum time to retry uploads in milliseconds.\n   */\n  get maxUploadRetryTime(): number {\n    return this._maxUploadRetryTime;\n  }\n\n  set maxUploadRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxUploadRetryTime = time;\n  }\n\n  /**\n   * The maximum time to retry operations other than uploads or downloads in\n   * milliseconds.\n   */\n  get maxOperationRetryTime(): number {\n    return this._maxOperationRetryTime;\n  }\n\n  set maxOperationRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxOperationRetryTime = time;\n  }\n\n  async _getAuthToken(): Promise<string | null> {\n    if (this._overrideAuthToken) {\n      return this._overrideAuthToken;\n    }\n    const auth = this._authProvider.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  async _getAppCheckToken(): Promise<string | null> {\n    const appCheck = this._appCheckProvider.getImmediate({ optional: true });\n    if (appCheck) {\n      const result = await appCheck.getToken();\n      // TODO: What do we want to do if there is an error getting the token?\n      // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n      // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      return result.token;\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  _delete(): Promise<void> {\n    if (!this._deleted) {\n      this._deleted = true;\n      this._requests.forEach(request => request.cancel());\n      this._requests.clear();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   */\n  _makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  /**\n   * @param requestInfo - HTTP RequestInfo object\n   * @param authToken - Firebase auth token\n   */\n  _makeRequest<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>,\n    authToken: string | null,\n    appCheckToken: string | null\n  ): Request<O> {\n    if (!this._deleted) {\n      const request = makeRequest(\n        requestInfo,\n        this._appId,\n        authToken,\n        appCheckToken,\n        requestFactory,\n        this._firebaseVersion\n      );\n      this._requests.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this._requests.delete(request),\n        () => this._requests.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  }\n\n  async makeRequestWithTokens<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>\n  ): Promise<O> {\n    const [authToken, appCheckToken] = await Promise.all([\n      this._getAuthToken(),\n      this._getAppCheckToken()\n    ]);\n\n    return this._makeRequest(\n      requestInfo,\n      requestFactory,\n      authToken,\n      appCheckToken\n    ).getPromise();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Storage.\n */\nexport const STORAGE_TYPE = 'storage';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\n\nimport {\n  ref as refInternal,\n  FirebaseStorageImpl,\n  connectStorageEmulator as connectEmulatorInternal\n} from './service';\nimport { Provider } from '@firebase/component';\n\nimport {\n  StorageReference,\n  FirebaseStorage,\n  UploadResult,\n  ListOptions,\n  ListResult,\n  UploadTask,\n  SettableMetadata,\n  UploadMetadata,\n  FullMetadata\n} from './public-types';\nimport { Metadata as MetadataInternal } from './metadata';\nimport {\n  uploadBytes as uploadBytesInternal,\n  uploadBytesResumable as uploadBytesResumableInternal,\n  uploadString as uploadStringInternal,\n  getMetadata as getMetadataInternal,\n  updateMetadata as updateMetadataInternal,\n  list as listInternal,\n  listAll as listAllInternal,\n  getDownloadURL as getDownloadURLInternal,\n  deleteObject as deleteObjectInternal,\n  Reference,\n  _getChild as _getChildInternal,\n  getBytesInternal\n} from './reference';\nimport { STORAGE_TYPE } from './constants';\nimport { EmulatorMockTokenOptions, getModularInstance } from '@firebase/util';\nimport { StringFormat } from './implementation/string';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n\n/**\n * Public types.\n */\nexport * from './public-types';\n\nexport { Location as _Location } from './implementation/location';\nexport { UploadTask as _UploadTask } from './task';\nexport type { Reference as _Reference } from './reference';\nexport type { FirebaseStorageImpl as _FirebaseStorageImpl } from './service';\nexport { FbsBlob as _FbsBlob } from './implementation/blob';\nexport { dataFromString as _dataFromString } from './implementation/string';\nexport {\n  invalidRootOperation as _invalidRootOperation,\n  invalidArgument as _invalidArgument\n} from './implementation/error';\nexport {\n  TaskEvent as _TaskEvent,\n  TaskState as _TaskState\n} from './implementation/taskenums';\nexport { StringFormat };\n\n/**\n * Downloads the data at the object's location. Returns an error if the object\n * is not found.\n *\n * To use this functionality, you have to whitelist your app's origin in your\n * Cloud Storage bucket. See also\n * https://cloud.google.com/storage/docs/configuring-cors\n *\n * @public\n * @param ref - StorageReference where data should be downloaded.\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\n * retrieve.\n * @returns A Promise containing the object's bytes\n */\nexport function getBytes(\n  ref: StorageReference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref = getModularInstance(ref);\n  return getBytesInternal(ref as Reference, maxDownloadSizeBytes);\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadBytesInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the string to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: StorageReference,\n  value: string,\n  format?: StringFormat,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadStringInternal(\n    ref as Reference,\n    value,\n    format,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): UploadTask {\n  ref = getModularInstance(ref);\n  return uploadBytesResumableInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  ) as UploadTask;\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - {@link StorageReference} to get metadata from.\n */\nexport function getMetadata(ref: StorageReference): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return getMetadataInternal(ref as Reference) as Promise<FullMetadata>;\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - {@link StorageReference} to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves with the new metadata for this object.\n */\nexport function updateMetadata(\n  ref: StorageReference,\n  metadata: SettableMetadata\n): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return updateMetadataInternal(\n    ref as Reference,\n    metadata as Partial<MetadataInternal>\n  ) as Promise<FullMetadata>;\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - {@link StorageReference} to get list from.\n * @param options - See {@link ListOptions} for details.\n * @returns A `Promise` that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: StorageReference,\n  options?: ListOptions\n): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listInternal(ref as Reference, options);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: `listAll` may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - {@link StorageReference} to get list from.\n *\n * @returns A `Promise` that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: StorageReference): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listAllInternal(ref as Reference);\n}\n\n/**\n * Returns the download URL for the given {@link StorageReference}.\n * @public\n * @param ref - {@link StorageReference} to get the download URL for.\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: StorageReference): Promise<string> {\n  ref = getModularInstance(ref);\n  return getDownloadURLInternal(ref as Reference);\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - {@link StorageReference} for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: StorageReference): Promise<void> {\n  ref = getModularInstance(ref);\n  return deleteObjectInternal(ref as Reference);\n}\n\n/**\n * Returns a {@link StorageReference} for the given url.\n * @param storage - {@link FirebaseStorage} instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorage, url?: string): StorageReference;\n/**\n * Returns a {@link StorageReference} for the given path in the\n * default bucket.\n * @param storageOrRef - {@link FirebaseStorage} or {@link StorageReference}.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if {@link FirebaseStorage}\n * instance provided) or returns same reference (if {@link StorageReference} provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorage | StorageReference,\n  path?: string\n): StorageReference;\nexport function ref(\n  serviceOrRef: FirebaseStorage | StorageReference,\n  pathOrUrl?: string\n): StorageReference | null {\n  serviceOrRef = getModularInstance(serviceOrRef);\n  return refInternal(\n    serviceOrRef as FirebaseStorageImpl | Reference,\n    pathOrUrl\n  );\n}\n\n/**\n * @internal\n */\nexport function _getChild(ref: StorageReference, childPath: string): Reference {\n  return _getChildInternal(ref as Reference, childPath);\n}\n\n/**\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\n * @public\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\n * If not passed, uses the app's default Storage Bucket.\n * @returns A {@link FirebaseStorage} instance.\n */\nexport function getStorage(\n  app: FirebaseApp = getApp(),\n  bucketUrl?: string\n): FirebaseStorage {\n  app = getModularInstance(app);\n  const storageProvider: Provider<'storage'> = _getProvider(app, STORAGE_TYPE);\n  const storageInstance = storageProvider.getImmediate({\n    identifier: bucketUrl\n  });\n  return storageInstance;\n}\n\n/**\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\n *\n * @param storage - The {@link FirebaseStorage} instance\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\n * token to use for unit testing Security Rules.\n * @public\n */\nexport function connectStorageEmulator(\n  storage: FirebaseStorage,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  connectEmulatorInternal(storage as FirebaseStorageImpl, host, port, options);\n}\n","/**\n * Cloud Storage for Firebase\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\n\nimport { FirebaseStorageImpl } from '../src/service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\nimport { name, version } from '../package.json';\n\nimport { FirebaseStorage } from './public-types';\nimport { STORAGE_TYPE } from './constants';\n\nexport * from './api';\nexport * from './api.browser';\n\nfunction factory(\n  container: ComponentContainer,\n  { instanceIdentifier: url }: InstanceFactoryOptions\n): FirebaseStorage {\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n  const appCheckProvider = container.getProvider('app-check-internal');\n\n  return new FirebaseStorageImpl(\n    app,\n    authProvider,\n    appCheckProvider,\n    url,\n    SDK_VERSION\n  );\n}\n\nfunction registerStorage(): void {\n  _registerComponent(\n    new Component(\n      STORAGE_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\n  registerVersion(name, version, '__RUNTIME_ENV__');\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\nregisterStorage();\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UploadTaskSnapshot } from '@firebase/storage';\nimport { ReferenceCompat } from './reference';\nimport { UploadTaskCompat } from './task';\nimport * as types from '@firebase/storage-types';\nimport { Compat } from '@firebase/util';\n\nexport class UploadTaskSnapshotCompat\n  implements types.UploadTaskSnapshot, Compat<UploadTaskSnapshot>\n{\n  constructor(\n    readonly _delegate: UploadTaskSnapshot,\n    readonly task: UploadTaskCompat,\n    readonly ref: ReferenceCompat\n  ) {}\n\n  get bytesTransferred(): number {\n    return this._delegate.bytesTransferred;\n  }\n  get metadata(): types.FullMetadata {\n    return this._delegate.metadata as types.FullMetadata;\n  }\n  get state(): string {\n    return this._delegate.state;\n  }\n  get totalBytes(): number {\n    return this._delegate.totalBytes;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  UploadTask,\n  StorageError,\n  UploadTaskSnapshot,\n  TaskEvent,\n  StorageObserver\n} from '@firebase/storage';\nimport { UploadTaskSnapshotCompat } from './tasksnapshot';\nimport { ReferenceCompat } from './reference';\nimport * as types from '@firebase/storage-types';\nimport { Compat } from '@firebase/util';\n\nexport class UploadTaskCompat implements types.UploadTask, Compat<UploadTask> {\n  constructor(\n    readonly _delegate: UploadTask,\n    private readonly _ref: ReferenceCompat\n  ) {}\n\n  get snapshot(): UploadTaskSnapshotCompat {\n    return new UploadTaskSnapshotCompat(\n      this._delegate.snapshot,\n      this,\n      this._ref\n    );\n  }\n\n  cancel = this._delegate.cancel.bind(this._delegate);\n  catch = this._delegate.catch.bind(this._delegate);\n  pause = this._delegate.pause.bind(this._delegate);\n  resume = this._delegate.resume.bind(this._delegate);\n\n  then(\n    onFulfilled?: ((a: UploadTaskSnapshotCompat) => unknown) | null,\n    onRejected?: ((a: StorageError) => unknown) | null\n  ): Promise<unknown> {\n    return this._delegate.then(snapshot => {\n      if (onFulfilled) {\n        return onFulfilled(\n          new UploadTaskSnapshotCompat(snapshot, this, this._ref)\n        );\n      }\n    }, onRejected);\n  }\n\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | types.StorageObserver<UploadTaskSnapshotCompat>\n      | null\n      | ((a: UploadTaskSnapshotCompat) => unknown),\n    error?: (error: StorageError) => void | null,\n    completed?: () => void | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshotCompat> {\n    let wrappedNextOrObserver:\n      | StorageObserver<UploadTaskSnapshot>\n      | undefined\n      | ((a: UploadTaskSnapshot) => unknown) = undefined;\n    if (!!nextOrObserver) {\n      if (typeof nextOrObserver === 'function') {\n        wrappedNextOrObserver = (taskSnapshot: UploadTaskSnapshot) =>\n          nextOrObserver(\n            new UploadTaskSnapshotCompat(taskSnapshot, this, this._ref)\n          );\n      } else {\n        wrappedNextOrObserver = {\n          next: !!nextOrObserver.next\n            ? (taskSnapshot: UploadTaskSnapshot) =>\n                nextOrObserver.next!(\n                  new UploadTaskSnapshotCompat(taskSnapshot, this, this._ref)\n                )\n            : undefined,\n          complete: nextOrObserver.complete || undefined,\n          error: nextOrObserver.error || undefined\n        };\n      }\n    }\n    return this._delegate.on(\n      type,\n      wrappedNextOrObserver,\n      error || undefined,\n      completed || undefined\n    );\n  }\n}\n\n/**\n * Subscribes to an event stream.\n */\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\n/**\n * Unsubscribes from a stream.\n */\nexport type Unsubscribe = () => void;\n\n/**\n * Function that is called once for each value in a stream of values.\n */\nexport type NextFn<T> = (value: T) => void;\n\n/**\n * A function that is called with a `FirebaseStorageError`\n * if the event stream ends due to an error.\n */\nexport type ErrorFn = (error: StorageError) => void;\n\n/**\n * A function that is called if the event stream ends normally.\n */\nexport type CompleteFn = () => void;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ListResult } from '@firebase/storage';\nimport * as types from '@firebase/storage-types';\nimport { ReferenceCompat } from './reference';\nimport { StorageServiceCompat } from './service';\nimport { Compat } from '@firebase/util';\n\nexport class ListResultCompat implements types.ListResult, Compat<ListResult> {\n  constructor(\n    readonly _delegate: ListResult,\n    private readonly _service: StorageServiceCompat\n  ) {}\n\n  get prefixes(): ReferenceCompat[] {\n    return this._delegate.prefixes.map(\n      ref => new ReferenceCompat(ref, this._service)\n    );\n  }\n  get items(): ReferenceCompat[] {\n    return this._delegate.items.map(\n      ref => new ReferenceCompat(ref, this._service)\n    );\n  }\n  get nextPageToken(): string | null {\n    return this._delegate.nextPageToken || null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  StorageReference,\n  uploadBytesResumable,\n  list,\n  listAll,\n  getDownloadURL,\n  getMetadata,\n  updateMetadata,\n  deleteObject,\n  UploadTask,\n  StringFormat,\n  UploadMetadata,\n  FullMetadata,\n  SettableMetadata,\n  _UploadTask,\n  _getChild,\n  _Reference,\n  _FbsBlob,\n  _dataFromString,\n  _invalidRootOperation\n} from '@firebase/storage';\n\nimport { UploadTaskCompat } from './task';\nimport { ListResultCompat } from './list';\nimport { StorageServiceCompat } from './service';\n\nimport * as types from '@firebase/storage-types';\nimport { Compat } from '@firebase/util';\n\nexport class ReferenceCompat\n  implements types.Reference, Compat<StorageReference>\n{\n  constructor(\n    readonly _delegate: StorageReference,\n    public storage: StorageServiceCompat\n  ) {}\n\n  get name(): string {\n    return this._delegate.name;\n  }\n\n  get bucket(): string {\n    return this._delegate.bucket;\n  }\n\n  get fullPath(): string {\n    return this._delegate.fullPath;\n  }\n\n  toString(): string {\n    return this._delegate.toString();\n  }\n\n  /**\n   * @returns A reference to the object obtained by\n   * appending childPath, removing any duplicate, beginning, or trailing\n   * slashes.\n   */\n  child(childPath: string): types.Reference {\n    const reference = _getChild(this._delegate, childPath);\n    return new ReferenceCompat(reference, this.storage);\n  }\n\n  get root(): types.Reference {\n    return new ReferenceCompat(this._delegate.root, this.storage);\n  }\n\n  /**\n   * @returns A reference to the parent of the\n   * current object, or null if the current object is the root.\n   */\n  get parent(): types.Reference | null {\n    const reference = this._delegate.parent;\n    if (reference == null) {\n      return null;\n    }\n    return new ReferenceCompat(reference, this.storage);\n  }\n\n  /**\n   * Uploads a blob to this object's location.\n   * @param data - The blob to upload.\n   * @returns An UploadTask that lets you control and\n   * observe the upload.\n   */\n  put(\n    data: Blob | Uint8Array | ArrayBuffer,\n    metadata?: types.FullMetadata\n  ): types.UploadTask {\n    this._throwIfRoot('put');\n    return new UploadTaskCompat(\n      uploadBytesResumable(this._delegate, data, metadata as UploadMetadata),\n      this\n    );\n  }\n\n  /**\n   * Uploads a string to this object's location.\n   * @param value - The string to upload.\n   * @param format - The format of the string to upload.\n   * @returns An UploadTask that lets you control and\n   * observe the upload.\n   */\n  putString(\n    value: string,\n    format: StringFormat = StringFormat.RAW,\n    metadata?: types.UploadMetadata\n  ): types.UploadTask {\n    this._throwIfRoot('putString');\n    const data = _dataFromString(format, value);\n    const metadataClone = { ...metadata };\n    if (metadataClone['contentType'] == null && data.contentType != null) {\n      metadataClone['contentType'] = data.contentType;\n    }\n    return new UploadTaskCompat(\n      new _UploadTask(\n        this._delegate as _Reference,\n        new _FbsBlob(data.data, true),\n        metadataClone as FullMetadata & { [k: string]: string }\n      ) as UploadTask,\n      this\n    );\n  }\n\n  /**\n   * List all items (files) and prefixes (folders) under this storage reference.\n   *\n   * This is a helper method for calling list() repeatedly until there are\n   * no more results. The default pagination size is 1000.\n   *\n   * Note: The results may not be consistent if objects are changed while this\n   * operation is running.\n   *\n   * Warning: listAll may potentially consume too many resources if there are\n   * too many results.\n   *\n   * @returns A Promise that resolves with all the items and prefixes under\n   *  the current storage reference. `prefixes` contains references to\n   *  sub-directories and `items` contains references to objects in this\n   *  folder. `nextPageToken` is never returned.\n   */\n  listAll(): Promise<types.ListResult> {\n    return listAll(this._delegate).then(\n      r => new ListResultCompat(r, this.storage)\n    );\n  }\n\n  /**\n   * List items (files) and prefixes (folders) under this storage reference.\n   *\n   * List API is only available for Firebase Rules Version 2.\n   *\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n   * delimited folder structure. Refer to GCS's List API if you want to learn more.\n   *\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n   * support objects whose paths end with \"/\" or contain two consecutive\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n   * list() may fail if there are too many unsupported objects in the bucket.\n   *\n   * @param options - See ListOptions for details.\n   * @returns A Promise that resolves with the items and prefixes.\n   * `prefixes` contains references to sub-folders and `items`\n   * contains references to objects in this folder. `nextPageToken`\n   * can be used to get the rest of the results.\n   */\n  list(options?: types.ListOptions | null): Promise<types.ListResult> {\n    return list(this._delegate, options || undefined).then(\n      r => new ListResultCompat(r, this.storage)\n    );\n  }\n\n  /**\n   * A `Promise` that resolves with the metadata for this object. If this\n   * object doesn't exist or metadata cannot be retreived, the promise is\n   * rejected.\n   */\n  getMetadata(): Promise<types.FullMetadata> {\n    return getMetadata(this._delegate) as Promise<types.FullMetadata>;\n  }\n\n  /**\n   * Updates the metadata for this object.\n   * @param metadata - The new metadata for the object.\n   * Only values that have been explicitly set will be changed. Explicitly\n   * setting a value to null will remove the metadata.\n   * @returns A `Promise` that resolves\n   * with the new metadata for this object.\n   * @see firebaseStorage.Reference.prototype.getMetadata\n   */\n  updateMetadata(\n    metadata: types.SettableMetadata\n  ): Promise<types.FullMetadata> {\n    return updateMetadata(\n      this._delegate,\n      metadata as SettableMetadata\n    ) as Promise<types.FullMetadata>;\n  }\n\n  /**\n   * @returns A `Promise` that resolves with the download\n   * URL for this object.\n   */\n  getDownloadURL(): Promise<string> {\n    return getDownloadURL(this._delegate);\n  }\n\n  /**\n   * Deletes the object at this location.\n   * @returns A `Promise` that resolves if the deletion succeeds.\n   */\n  delete(): Promise<void> {\n    this._throwIfRoot('delete');\n    return deleteObject(this._delegate);\n  }\n\n  private _throwIfRoot(name: string): void {\n    if ((this._delegate as _Reference)._location.path === '') {\n      throw _invalidRootOperation(name);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as types from '@firebase/storage-types';\nimport { FirebaseApp } from '@firebase/app-types';\n\nimport {\n  ref,\n  connectStorageEmulator,\n  FirebaseStorage,\n  _Location,\n  _invalidArgument,\n  _FirebaseStorageImpl\n} from '@firebase/storage';\nimport { ReferenceCompat } from './reference';\nimport { Compat, EmulatorMockTokenOptions } from '@firebase/util';\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n */\nexport class StorageServiceCompat\n  implements types.FirebaseStorage, Compat<FirebaseStorage>\n{\n  constructor(public app: FirebaseApp, readonly _delegate: FirebaseStorage) {}\n\n  get maxOperationRetryTime(): number {\n    return this._delegate.maxOperationRetryTime;\n  }\n\n  get maxUploadRetryTime(): number {\n    return this._delegate.maxUploadRetryTime;\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  ref(path?: string): types.Reference {\n    if (isUrl(path)) {\n      throw _invalidArgument(\n        'ref() expected a child path but got a URL, use refFromURL instead.'\n      );\n    }\n    return new ReferenceCompat(ref(this._delegate, path), this);\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): types.Reference {\n    if (!isUrl(url)) {\n      throw _invalidArgument(\n        'refFromURL() expected a full URL but got a child path, use ref() instead.'\n      );\n    }\n    try {\n      _Location.makeFromUrl(url, (this._delegate as _FirebaseStorageImpl).host);\n    } catch (e) {\n      throw _invalidArgument(\n        'refFromUrl() expected a valid full URL but got an invalid one.'\n      );\n    }\n    return new ReferenceCompat(ref(this._delegate, url), this);\n  }\n\n  setMaxUploadRetryTime(time: number): void {\n    this._delegate.maxUploadRetryTime = time;\n  }\n\n  setMaxOperationRetryTime(time: number): void {\n    this._delegate.maxOperationRetryTime = time;\n  }\n\n  useEmulator(\n    host: string,\n    port: number,\n    options: {\n      mockUserToken?: EmulatorMockTokenOptions | string;\n    } = {}\n  ): void {\n    connectStorageEmulator(this._delegate, host, port, options);\n  }\n}\n\nfunction isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}"],"sourceRoot":""}