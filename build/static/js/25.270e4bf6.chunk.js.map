{"version":3,"sources":["views/customer/CustomerDetail.js","services/helper.js","firebase/index.js","services/product.js","services/image.js","services/customer.js"],"names":["formItemLayout","labelCol","xs","span","sm","wrapperCol","withNamespaces","match","t","Form","useForm","form","history","useHistory","useState","data","setData","setStatusName","setStatusColor","console","log","useEffect","getCustomerDetail","params","id","res","status","Status","users","filter","item","name","color","notification","error","message","description","placement","duration","md","className","style","display","justifyContent","alignItems","onFinish","values","customer_id","Modal","confirm","title","icon","content","onOk","updateCustomer","success","push","onCancel","info","centered","Item","label","labelAlign","fullname","email","phone","rank","type","block","htmlType","BaseHelper","Object","keys","forEach","isNaN","parseFloat","value","toLocaleString","currency","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","getLazyProducts","pagination","category_id","a","axios","AxiosConfig","api","page","limit","get","getListProducts","callback","then","catch","err","response","getToken","getProductDetail","product_id","process","updateProduct","put","createProduct","post","convertToGift","uploadImage","filename","file","func","ref","on","snapshot","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","url","uploadImageWithStatus","getListCustomers","filters","isBlock","patch"],"mappings":"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","file":"static/js/25.270e4bf6.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CCol, CRow, CCard, CCardBody, CCardHeader } from \"@coreui/react\";\r\nimport { Status } from \"src/configs\";\r\nimport {\r\n  Table,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  notification,\r\n  Upload,\r\n  Avatar,\r\n} from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { uploadImage } from \"src/services/image\";\r\nimport { getProductDetail, updateProduct } from \"src/services/product\";\r\nimport { getCustomerDetail, updateCustomer } from \"src/services/customer\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport { storage } from \"src/firebase\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport { useHistory } from \"react-router\";\r\nimport BaseHelper from \"src/services/helper\";\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst CustomerDetail = ({ match, t }) => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n  const [data, setData] = useState();\r\n  const [statusName, setStatusName] = useState(\"Active\");\r\n  const [statusColor, setStatusColor] = useState(\"green\");\r\n\r\n  console.log(data);\r\n\r\n  useEffect(() => {\r\n    getCustomerDetail(match.params.id, (res) => {\r\n      if (res.status === 200) {\r\n        setData(res.data);\r\n        setStatusName(\r\n          Status.users.filter((item) => item.id == res.data.status)[0].name\r\n        );\r\n        setStatusColor(\r\n          Status.users.filter((item) => item.id == res.data.status)[0].color\r\n        );\r\n      } else {\r\n        notification.error({\r\n          message: t(`Notification`),\r\n          description: `Get Driver failed.`,\r\n          placement: `bottomRight`,\r\n          duration: 1.5,\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n  const onFinish = (values) => {\r\n    const customer_id = match.params.id;\r\n    Modal.confirm({\r\n      title: t(`Update Customer`),\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: t(\r\n        `You are going to update this customer? Are you sure you want to do this? You can't reverse this`\r\n      ),\r\n      onOk() {\r\n        updateCustomer(customer_id, data?.status == 1 ? false : true, (res) => {\r\n          if (res.status === 200) {\r\n            notification.success({\r\n              message: t(`Notification`),\r\n              description: `Update customer successful.`,\r\n              placement: `bottomRight`,\r\n              duration: 1.5,\r\n            });\r\n            history.push(\"/customers\");\r\n          } else {\r\n            notification.error({\r\n              message: t(`Notification`),\r\n              description: `Update customer failed.`,\r\n              placement: `bottomRight`,\r\n              duration: 1.5,\r\n            });\r\n          }\r\n        });\r\n      },\r\n      onCancel() {\r\n        notification.info({\r\n          message: t(`Notification`),\r\n          description: t(`Stop update customer`),\r\n          placement: `bottomRight`,\r\n          duration: 1.5,\r\n        });\r\n      },\r\n      centered: true,\r\n    });\r\n  };\r\n  return (\r\n    <CRow>\r\n      <CCol xs=\"12\" md=\"9\" className=\"mb-4\">\r\n        <CCard>\r\n          <CCardHeader\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"baseline\",\r\n            }}\r\n          >\r\n            {t(\"Customer Detail\")}\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <Form form={form} {...formItemLayout} onFinish={onFinish}>\r\n              <Form.Item label={t(\"Name\")} labelAlign=\"left\" name=\"fullname\">\r\n                <p>{`${data?.fullname}`}</p>\r\n              </Form.Item>\r\n              <Form.Item label={t(\"Email\")} labelAlign=\"left\" name=\"email\">\r\n                <p>{`${data?.email}`}</p>\r\n              </Form.Item>\r\n              <Form.Item label={t(\"Phone\")} labelAlign=\"left\" name=\"phone\">\r\n                <p>{`${data?.phone}`}</p>\r\n              </Form.Item>\r\n              <Form.Item label={t(\"Rank\")} labelAlign=\"left\" name=\"rank\">\r\n                <Tag\r\n                  color={\r\n                    Status.rank.filter((item) => item.id == data?.rank)[0]\r\n                      ?.color\r\n                  }\r\n                >\r\n                  {Status.rank.filter((item) => item.id == data?.rank)[0]?.name}\r\n                </Tag>\r\n              </Form.Item>\r\n              <Form.Item label={t(\"Status\")} labelAlign=\"left\" name=\"status\">\r\n                <Tag\r\n                  color={\r\n                    Status.users.filter((item) => item.id == data?.status)[0]\r\n                      ?.color\r\n                  }\r\n                >\r\n                  {\r\n                    Status.users.filter((item) => item.id == data?.status)[0]\r\n                      ?.name\r\n                  }\r\n                </Tag>\r\n              </Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                block\r\n                htmlType=\"submit\"\r\n                className={`${\r\n                  data?.status == 1 || data?.status == 0\r\n                    ? \"btn-danger\"\r\n                    : \"btn-success\"\r\n                }`}\r\n              >\r\n                {t(\r\n                  `${\r\n                    data?.status == 1 || data?.status == 0 ? \"Block\" : \"Unblock\"\r\n                  }`\r\n                )}\r\n              </Button>\r\n            </Form>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default withNamespaces()(CustomerDetail);\r\n","class BaseHelper {\r\n  formatData(values) {\r\n    Object.keys(values).forEach((item) => {\r\n      if (!isNaN(values[item])) {\r\n        values[item] = parseFloat(values[item]);\r\n      } else {\r\n      }\r\n    });\r\n    return values;\r\n  }\r\n  formatVND(value) {\r\n    return value.toLocaleString(\"it-IT\", {\r\n      style: \"currency\",\r\n      currency: \"USD\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default new BaseHelper();\r\n","import firebase, { initializeApp } from \"firebase/compat/app\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAT8Cky7hDDnXaLEUaX5psnHgJTr6dRHFA\",\r\n  authDomain: \"candle-upload-image.firebaseapp.com\",\r\n  projectId: \"candle-upload-image\",\r\n  storageBucket: \"candle-upload-image.appspot.com\",\r\n  messagingSenderId: \"710341271634\",\r\n  appId: \"1:710341271634:web:4376e9abe3b1923b72bf8b\",\r\n  measurementId: \"G-ZZRD4Z2Y99\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebase as default };\r\n","import axios from \"axios\";\r\nimport { AxiosConfig } from \"src/configs\";\r\nimport { getToken, getLazyToken } from \"./auth\";\r\n/**\r\n * 1 cách optimize cách viết này đó chính là tạo 1 hook là useResourceData() nma lười quá nên tạm v\r\n */\r\nexport async function getLazyProducts(pagination, category_id) {\r\n  const axios = AxiosConfig();\r\n  let api = \"\";\r\n  if (category_id) {\r\n    api = `/product?page=${pagination.page || 1}&limit=${\r\n      pagination.limit || 100\r\n    }&category=${category_id}`;\r\n  } else {\r\n    api = `/product?page=${pagination.page || 1}&limit=${\r\n      pagination.limit || 100\r\n    }`;\r\n  }\r\n  return await axios.get(api);\r\n}\r\nexport function getListProducts(pagination, category_id, callback) {\r\n  const axios = AxiosConfig();\r\n  let api = \"\";\r\n  if (category_id) {\r\n    api = `/product?page=${pagination.page || 1}&limit=${\r\n      pagination.limit || 100\r\n    }&category=${category_id}`;\r\n  } else {\r\n    api = `/product?page=${pagination.page || 1}&limit=${\r\n      pagination.limit || 100\r\n    }`;\r\n  }\r\n  axios\r\n    .get(api)\r\n    .then((res) => {\r\n      callback({ ...res });\r\n    })\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        if (err.response.status == 401 || err.response.status == 403) {\r\n          getToken(() => {\r\n            getListProducts(pagination, category_id, callback);\r\n          });\r\n        } else {\r\n          callback({\r\n            ...err.response,\r\n            message: \"Get list products failed!\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n}\r\n\r\nexport function getProductDetail(product_id, callback) {\r\n  const axios = AxiosConfig();\r\n\r\n  axios\r\n    .get(`${process.env.REACT_APP_API}product/${product_id}`)\r\n    .then((res) => {\r\n      callback(res);\r\n    })\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response);\r\n        if (err.response.status === 401 || err.response.status === 403) {\r\n          getToken(() => {\r\n            getProductDetail(product_id, callback);\r\n          });\r\n        } else {\r\n          callback(err.response.data);\r\n        }\r\n      }\r\n    });\r\n}\r\n\r\nexport function updateProduct(product_id, data, callback) {\r\n  const axios = AxiosConfig();\r\n  axios\r\n    .put(`/product/${product_id}`, data)\r\n    .then((res) => {\r\n      callback(res);\r\n    })\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        if (err.response.status === 403 || err.response.status == 401) {\r\n          getToken(() => {\r\n            updateProduct(product_id, data, callback);\r\n          });\r\n        } else {\r\n          callback(err.response.data);\r\n        }\r\n      }\r\n    });\r\n}\r\n\r\nexport function createProduct(data, callback) {\r\n  const axios = AxiosConfig();\r\n  axios\r\n    .post(`/product`, data)\r\n    .then((res) => {\r\n      callback(res);\r\n    })\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        if (err.response.status === 403 || err.response.status == 401) {\r\n          getToken(() => {\r\n            createProduct(data, callback);\r\n          });\r\n        } else {\r\n          callback(err.response.data);\r\n        }\r\n      }\r\n    });\r\n}\r\n\r\nexport function convertToGift(product_id, data, callback) {\r\n  const axios = AxiosConfig();\r\n  axios\r\n    .put(`/product/convert/${product_id}`, data)\r\n    .then((res) => {\r\n      callback(res);\r\n    })\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        if (err.response.status === 403 || err.response.status == 401) {\r\n          getToken(() => {\r\n            convertToGift(product_id, data, callback);\r\n          });\r\n        } else {\r\n          callback(err.response.data);\r\n        }\r\n      }\r\n    });\r\n}\r\n","import { storage } from \"src/firebase\";\r\nimport { notification } from \"antd\";\r\n//@params func here is a setState in react hook\r\nexport const uploadImage = (filename, file, func) => {\r\n  const uploadTask = storage.ref(`images/${filename}`).put(file);\r\n  uploadTask.on(\r\n    \"state_changed\",\r\n    (snapshot) => {\r\n      const progress = Math.round(\r\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n      );\r\n      if (progress == 100) {\r\n        notification.success({\r\n          message: `Notification`,\r\n          description: \"Add avatar successfully!\",\r\n          placement: `bottomRight`,\r\n          duration: 1.5,\r\n        });\r\n      }\r\n    },\r\n    (error) => {\r\n      console.log(error);\r\n    },\r\n    () => {\r\n      storage\r\n        .ref(\"images\")\r\n        .child(filename)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          func(url);\r\n        });\r\n    }\r\n  );\r\n};\r\n\r\nexport const uploadImageWithStatus = (filename, file, func) => {\r\n  const uploadTask = storage.ref(`images/${filename}`).put(file);\r\n  uploadTask.on(\r\n    \"state_changed\",\r\n    (snapshot) => {\r\n      const progress = Math.round(\r\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n      );\r\n      if (progress == 100) {\r\n        notification.success({\r\n          message: `Notification`,\r\n          description: \"Add avatar successfully!\",\r\n          placement: `bottomRight`,\r\n          duration: 1.5,\r\n        });\r\n        func({\r\n          status: \"uploading\",\r\n          url: \"\",\r\n        });\r\n      }\r\n    },\r\n    (error) => {\r\n      console.log(error);\r\n    },\r\n    () => {\r\n      storage\r\n        .ref(\"images\")\r\n        .child(filename)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          func({\r\n            status: \"done\",\r\n            url: url,\r\n          });\r\n        });\r\n    }\r\n  );\r\n};\r\n","import { AxiosConfig } from \"src/configs\";\r\nimport { getToken } from \"./auth\";\r\n\r\nexport function getListCustomers(pagination, filters, callback) {\r\n  const axios = AxiosConfig();\r\n  let api = `/customer?page=${pagination.page || 1}&limit=${\r\n    pagination.limit || 100\r\n  }`;\r\n  if (filters && filters?.rank) {\r\n    api += `&rank=`;\r\n    filters.rank.forEach((item) => {\r\n      api += `${item},`;\r\n    });\r\n  }\r\n\r\n  axios\r\n    .get(api)\r\n    .then((res) => {\r\n      callback({ ...res });\r\n    })\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        if (err.response.status == 401 || err.response.status == 403) {\r\n          getToken(() => {\r\n            getListCustomers(pagination, filters, callback);\r\n          });\r\n        } else {\r\n          callback({\r\n            ...err.response,\r\n            message: \"Get list customers failed!\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n}\r\n\r\nexport function getCustomerDetail(customer_id, callback) {\r\n  const axios = AxiosConfig();\r\n  let api = `/customer/${customer_id}`;\r\n  axios\r\n    .get(api)\r\n    .then((res) => {\r\n      callback({ ...res });\r\n    })\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        if (err.response.status == 401 || err.response.status == 403) {\r\n          getToken(() => {\r\n            getCustomerDetail(customer_id, callback);\r\n          });\r\n        } else {\r\n          callback({\r\n            ...err.response,\r\n            message: \"Get customer detail failed!\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n}\r\n\r\nexport function updateCustomer(customer_id, isBlock, callback) {\r\n  const axios = AxiosConfig();\r\n  let api = ``;\r\n  if (isBlock) {\r\n    api = `/customer/unblock/${customer_id}`;\r\n  } else {\r\n    api = `/customer/block/${customer_id}`;\r\n  }\r\n  axios\r\n    .patch(api)\r\n    .then((res) => {\r\n      callback({ ...res });\r\n    })\r\n    .catch((err) => {\r\n      if (err.response) {\r\n        if (err.response.status == 401 || err.response.status == 403) {\r\n          getToken(() => {\r\n            updateCustomer(customer_id, isBlock, callback);\r\n          });\r\n        } else {\r\n          callback({\r\n            ...err.response,\r\n            message: \"Get customer detail failed!\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n}\r\n"],"sourceRoot":""}